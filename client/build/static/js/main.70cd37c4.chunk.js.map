{"version":3,"sources":["components/InfoBar/InfoBar.module.css","components/MessageBubble/MessageBubble.module.css","components/common/TextInput/TextInput.js","components/common/Section/Section.js","constants.js","clientUrls.js","components/Chat/Chat.js","components/Login/messages.js","components/Login/Login.js","components/Logout/messages.js","components/Logout/Logout.js","components/ChatContext/ChatContext.js","components/SidePanel/messages.js","components/SidePanel/SidePanel.js","components/ChatInputField/messages.js","components/ChatInputField/ChatInputField.js","components/MessageBubble/MessageBubble.js","components/InfoBar/messages.js","components/InfoBar/InfoBar.js","components/ChatContainer/ChatContainer.js","environment.js","App.js","serviceWorker.js","index.js","components/Login/Login.module.css","components/SidePanel/SidePanel.module.css","components/ChatContainer/ChatContainer.module.css","components/common/Section/Section.module.css","components/ChatInputField/ChatInputField.module.css","App.module.css","components/common/TextInput/TextInput.module.css","components/Logout/Logout.module.css","components/Chat/Chat.module.css"],"names":["module","exports","TextInput","props","className","styles","root","Section","header","children","hasFormContent","cx","form","REGEX_ANY_TRAILING_SLASHES","REGEX_ANY_LEADING_SLASHES","REGEX_DUPLICATE_SLASHES","buildUrlPath","rootPath","childPath","replace","urls","chat","logout","socket","clientUrls","messages","login_header","defaultMessage","submit_button_label","username_error_message","Login","location","useState","userName","setUserName","chatRoom","setChatRoom","pathname","formComponents","value","autoFocus","placeholder","onChange","e","target","isValid","map","element","i","type","others","FormField","key","to","onClick","disabled","submitButton","submitButtonDisabled","forbidden","errorMessage","logout_message","login_again_message","Logout","ChatContext","createContext","ChatProvider","values","Provider","panel_header","SidePanel","users","useContext","panelHeader","name","panelListItem","capitalize","input_placeholder","send_button_text","ChatInputField","sendMessage","message","setMessage","handleSend","InputGroup","FormControl","textInput","onKeyPress","Append","Button","variant","MessageBubble","user","isFromNativeUser","remoteBubbleStyle","remoteUserMessageBubble","remoteMessageBubble","bubbleStyle","userMessageBubble","userNameOnBubble","userNameText","messageText","sign_in_text","logout_text","InfoBar","Navbar","bg","Brand","Toggle","Collapse","Nav","NavDropdown","title","id","Item","Divider","href","ChatContainer","chatMessages","followButtonClassName","followButton","scrollViewClassName","scrollView","text","Chat","setUsers","setMessages","hasError","setHasError","useEffect","queryString","parse","search","ignoreQueryPrefix","room","io","emit","error","off","on","useCallback","preventDefault","chatContextValues","useMemo","exact","App","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,KAAO,wB,yDCAzBD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,kBAAoB,yCAAyC,oBAAsB,2CAA2C,wBAA0B,+CAA+C,aAAe,oCAAoC,YAAc,qC,qMCM9SC,EAJG,SAAAC,GAChB,OAAO,yCAAOC,UAAWC,IAAOC,MAAUH,K,iBCa7BI,EAbC,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,SAAUL,EAAwC,EAAxCA,UAAwC,IAA7BM,sBAA6B,SAC3E,OACE,yBAAKN,UAAWO,IAAGN,IAAOC,KAAMF,IAC9B,4BAAKI,GACJE,EACC,0BAAMN,UAAWC,IAAOO,MAAOH,GAE/BA,ICVKI,EAA6B,QAG7BC,EAA4B,QAG5BC,EAA0B,UCDjCC,EAAe,SAACC,EAAUC,GAC9B,MAAO,UAAGD,GAAH,OAAcC,GAClBC,QAAQN,EAA4B,IACpCM,QAAQL,EAA2B,KACnCK,QAAQJ,EAAyB,MAGhCK,EAAO,CAEbA,KAAY,IACZA,UAAiB,cACjBA,EAAKC,KAAOL,EAAaI,EAAKd,KAAM,SACpCc,EAAKE,OAASN,EAAaI,EAAKd,KAAM,WAE/B,ICTHiB,EDSSC,EAAaJ,EERXK,EAZE,CACfC,aAAc,CACZC,eAAgB,uBAElBC,oBAAqB,CACnBD,eAAgB,WAElBE,uBAAwB,CACtBF,eAAgB,4BCkELG,EAjED,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACEC,mBAAS,IADX,mBACvBC,EADuB,KACbC,EADa,OAEEF,mBAAS,IAFX,mBAEvBG,EAFuB,KAEbC,EAFa,KAItBC,EAAaN,EAAbM,SAEFC,EAAiB,CACrB,CACEC,MAAON,EACPO,WAAW,EACXC,YAAa,kBACbC,SAAU,SAACC,GAAD,OAAOT,EAAYS,EAAEC,OAAOL,SAExC,CACEA,MAAOJ,EACPM,YAAa,2BACbC,SAAU,SAACC,GAAD,OAAOP,EAAYO,EAAEC,OAAOL,UAiBpCM,IAAYZ,KAAcE,EAEhC,OACE,kBAAC,EAAD,CACE3B,OAAQiB,EAASC,aAAaC,eAC9BvB,UAAWC,IAAOC,KAClBI,gBAAgB,GAEJ4B,EApBcQ,KAAI,SAACC,EAASC,GAAO,IACvCC,EAAoBF,EAApBE,KAASC,EAD6B,YAClBH,EADkB,UAExCI,EAAYF,GAAc/C,EAChC,OAAO,kBAACiD,EAAD,eAAWC,IAAKJ,GAAOE,OAkB9B,kBAAC,IAAD,CAAMG,GAAE,UAAK7B,EAAWH,KAAhB,iBAA6BY,EAA7B,iBAA8CE,IACpD,4BACEmB,QAhBU,WAChBpB,EAAY,IACZE,EAAY,KAeNmB,UAAWV,EACXzC,UACEyC,EACIxC,IAAOmD,aACP7C,IAAGN,IAAOmD,aAAcnD,IAAOoD,sBAErCR,KAAK,UAEL,uBAAG7C,UAAU,oCAGhBiC,IAAab,EAAWkC,WACvB,uBAAGtD,UAAWC,IAAOsD,cAClBlC,EAASI,uBAAuBF,kB,iBC1D5BF,EATE,CACfmC,eAAgB,CACdjC,eAAgB,wCAElBkC,oBAAqB,CACnBlC,eAAgB,gBCeLmC,EAbA,WACb,OACE,kBAAC,EAAD,CACEtD,OAAQiB,EAASmC,eAAejC,eAChCvB,UAAWC,IAAOC,MAElB,kBAAC,IAAD,CAAM+C,GAAI7B,EAAWlB,MAClBmB,EAASoC,oBAAoBlC,kB,4DCZhCoC,EAAcC,wBAAc,MAE5BC,EAAe,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQzD,EAAe,EAAfA,SAC9B,OAAO,kBAACsD,EAAYI,SAAb,CAAsB5B,MAAO2B,GAASzD,I,iBCChCgB,EANE,CACf2C,aAAc,CACZzC,eAAgB,Y,iBCwBL0C,EApBG,WAAO,IACfC,EAAUC,qBAAWR,GAArBO,MAER,OACE,yBAAKlE,UAAWC,IAAOC,MACrB,yBAAKF,UAAWC,IAAOmE,aACpB/C,EAAS2C,aAAazC,gBAEzB,6BACG2C,EAAMxB,KAAI,WAAWE,GAAX,IAAGyB,EAAH,EAAGA,KAAH,OACT,yBAAKrB,IAAKJ,EAAG5C,UAAWC,IAAOqE,eAC7B,uBAAGtE,UAAU,uBACb,uBAAGA,UAAWC,IAAO4B,UAAW0C,IAAWF,W,kECTxChD,GATE,CACfmD,kBAAmB,CACjBjD,eAAgB,qBAElBkD,iBAAkB,CAChBlD,eAAgB,UCsCLmD,GArCQ,WAAO,IACpBC,EAAgBR,qBAAWR,GAA3BgB,YADmB,EAEG/C,mBAAS,IAFZ,mBAEpBgD,EAFoB,KAEXC,EAFW,KAQrBC,EAAa,SAACvC,GAClBoC,EAAYpC,EAAGqC,GACfC,EAAW,KAGb,OACE,kBAACE,EAAA,EAAD,CAAY/E,UAAWC,KAAOC,MAC5B,kBAAC8E,GAAA,EAAD,CACEhF,UAAWC,KAAOgF,UAClB9C,MAAOyC,EACPvC,YAAahB,GAASmD,kBAAkBjD,eACxCa,WAAS,EACTE,SAhBe,SAACC,GACpBsC,EAAWtC,EAAEC,OAAOL,QAgBhB+C,WAAY,SAAC3C,GAAD,MAAkB,UAAVA,EAAES,IAAkB8B,EAAWvC,GAAK,QAE1D,kBAACwC,EAAA,EAAWI,OAAZ,KACE,kBAACC,GAAA,EAAD,CACEC,QAAQ,QACRnC,QAAS,SAACX,GAAD,OAAOuC,EAAWvC,IAC3BY,UAAWyB,GAEX,uBAAG5E,UAAU,uBACZqB,GAASoD,iBAAiBlD,mB,oBCVtB+D,GArBO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMX,EAAgC,EAAhCA,QAASY,EAAuB,EAAvBA,iBAChCC,EACK,gBAATF,EACIhF,IAAGN,KAAOC,KAAMD,KAAOyF,yBACvBnF,IAAGN,KAAOC,KAAMD,KAAO0F,qBAEvBC,EAAcJ,EAChBjF,IAAGN,KAAOC,KAAMD,KAAO4F,mBACvBtF,IAAGN,KAAOC,KAAMuF,GAEdK,EAAmBN,EAAmB,MAAQjB,IAAWgB,GAC/D,OACE,yBAAKvF,UAAW4F,GACJ,gBAATL,GACC,uBAAGvF,UAAWC,KAAO8F,cAAeD,GAEtC,uBAAG9F,UAAWC,KAAO+F,aAAcpB,K,mDCZ1BvD,GATE,CACf4E,aAAc,CACZ1E,eAAgB,kBAElB2E,YAAa,CACX3E,eAAgB,aC0BL4E,GAxBC,WAAO,IAAD,EACWhC,qBAAWR,GAAlC9B,EADY,EACZA,SAAUE,EADE,EACFA,SAClB,OACE,kBAACqE,GAAA,EAAD,CAAQpG,UAAWC,KAAOC,KAAMmG,GAAG,OAAOhB,QAAQ,QAChD,kBAACe,GAAA,EAAOE,MAAR,KAAevE,GACf,kBAACqE,GAAA,EAAOG,OAAR,MACA,kBAACH,GAAA,EAAOI,SAAR,CAAiBxG,UAAU,uBACzB,kBAACyG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,MAAK,UAAKtF,GAAS4E,aAAa1E,gBAA3B,OAA4CM,GACjD+E,GAAG,4BAEH,kBAACF,GAAA,EAAYG,KAAb,uBACA,kBAACH,GAAA,EAAYI,QAAb,MACA,kBAACJ,GAAA,EAAYG,KAAb,CAAkBE,KAAM3F,EAAWF,QAChCG,GAAS6E,YAAY3E,qB,oBCarByF,GA3BO,WAAO,IAAD,EACmB7C,qBAAWR,GAAhD9B,EADkB,EAClBA,SAAoBoF,EADF,EACR5F,SAClB,OACE,yBAAKrB,UAAWC,KAAOC,MACrB,kBAAC,GAAD,MACA,kBAAC,IAAD,CACEF,UAAWC,KAAOoB,SAClB6F,sBAAuBjH,KAAOkH,aAC9BC,oBAAqBnH,KAAOoH,YAE3BJ,EAAavE,KAAI,WAAiBE,GAAO,IAArB2C,EAAoB,EAApBA,KAAM+B,EAAc,EAAdA,KACnB9B,EAAmBD,IAAS1D,EAClC,OACE,kBAAC,GAAD,CACEmB,IAAKJ,EACL2C,KAAMA,EACNX,QAAS0C,EACT9B,iBAAkBA,QAK1B,kBAAC,GAAD,QbyDS+B,GA1EF,SAAC,GAAkB,IAAhB5F,EAAe,EAAfA,SAAe,EACGC,mBAAS,IADZ,mBACtBC,EADsB,KACZC,EADY,OAEGF,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGHJ,mBAAS,IAHN,mBAGtBsC,EAHsB,KAGfsD,EAHe,OAIC5F,mBAAS,IAJV,mBAItBgD,EAJsB,KAIbC,EAJa,OAKGjD,mBAAS,IALZ,mBAKtBP,EALsB,KAKZoG,EALY,OAOG7F,oBAAS,GAPZ,mBAOtB8F,EAPsB,KAOZC,EAPY,KAS7BC,qBAAU,WAAO,IAAD,EACSC,IAAYC,MAAMnG,EAASoG,OAAQ,CACxDC,mBAAmB,IADb3D,EADM,EACNA,KAAM4D,EADA,EACAA,KAcd,OAXA9G,EAAS+G,IczBe,+Cd2BxBpG,EAAYuC,GACZrC,EAAYiG,GAEZ9G,EAAOgH,KAAK,OAAQ,CAAE9D,OAAM4D,SAAQ,SAACG,GAC7BA,GACJT,GAAY,MAIT,WACLxG,EAAOgH,KAAK,cACZhH,EAAOkH,SAER,CAAC1G,EAASoG,SAEbH,qBAAU,WACRzG,EAAOmH,GAAG,WAAW,YAAqB,IAAlB/C,EAAiB,EAAjBA,KAAM+B,EAAW,EAAXA,KAC5BG,GAAY,SAACpG,GAAD,4BAAkBA,GAAlB,CAA4B,CAAEkE,OAAM+B,gBAGlDnG,EAAOmH,GAAG,YAAY,YAAgB,IAAbpE,EAAY,EAAZA,MACvBsD,EAAStD,QAEV,IAEH,IAAMS,EAAc4D,uBAAY,SAAChG,EAAGqC,GAClCrC,EAAEiG,iBAEE5D,GACFzD,EAAOgH,KAAK,cAAevD,GAAS,kBAAMC,EAAWD,QAEtD,IAEG6D,EAAoBC,mBACxB,iBAAO,CACLxE,QACArC,WACAE,WACA6C,UACAvD,WACAsD,iBAEF,CAACT,EAAOrC,EAAUE,EAAU6C,EAASvD,EAAUsD,IAGjD,OAAI+C,EACK,kBAAC,IAAD,CAAUiB,OAAK,EAAC1F,GAAI7B,EAAWkC,YAItC,kBAAC,EAAD,CAAcQ,OAAQ2E,GACpB,yBAAKzI,UAAWC,IAAOC,MACrB,kBAAC,EAAD,MACA,kBAAC,GAAD,SexDO0I,GAjBH,WACV,OACE,yBAAK5I,UAAWC,IAAOC,MACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE2I,KAAM,CAACzH,EAAWlB,KAAMkB,EAAWkC,WACnCqF,OAAK,EACLG,UAAWpH,IAEb,kBAAC,IAAD,CAAOmH,KAAMzH,EAAWH,KAAM0H,OAAK,EAACG,UAAWvB,KAC/C,kBAAC,IAAD,CAAOsB,KAAMzH,EAAWF,OAAQyH,OAAK,EAACG,UAAWpF,QCPvCqF,QACW,cAA7BC,OAAOrH,SAASsH,UAEe,UAA7BD,OAAOrH,SAASsH,UAEhBD,OAAOrH,SAASsH,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBElInBhK,EAAOC,QAAU,CAAC,KAAO,oBAAoB,aAAe,4BAA4B,qBAAuB,oCAAoC,aAAe,8B,mBCAlKD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAc,+BAA+B,cAAgB,iCAAiC,SAAW,4BAA4B,YAAc,iC,mBCApMD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,SAAW,gCAAgC,WAAa,kCAAkC,aAAe,sC,mBCA9JD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mBCAtDD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,UAAY,oC,mBCAlED,EAAOC,QAAU,CAAC,KAAO,oB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB","file":"static/js/main.70cd37c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InfoBar_root__2iDUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MessageBubble_root__LFdHb\",\"userMessageBubble\":\"MessageBubble_userMessageBubble__Jy7J_\",\"remoteMessageBubble\":\"MessageBubble_remoteMessageBubble__2xHqA\",\"remoteUserMessageBubble\":\"MessageBubble_remoteUserMessageBubble__2tYU9\",\"userNameText\":\"MessageBubble_userNameText__insKR\",\"messageText\":\"MessageBubble_messageText__3L-df\"};","import React from \"react\";\r\nimport styles from \"./TextInput.module.css\";\r\n\r\nconst TextInput = props => {\r\n  return <input className={styles.root} {...props} />;\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport styles from \"./Section.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst Section = ({ header, children, className, hasFormContent = false }) => {\r\n  return (\r\n    <div className={cx(styles.root, className)}>\r\n      <h2>{header}</h2>\r\n      {hasFormContent ? (\r\n        <form className={styles.form}>{children}</form>\r\n      ) : (\r\n        children\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","// match trailing slashes on url\r\nexport const REGEX_ANY_TRAILING_SLASHES = /\\/*$/g;\r\n\r\n// match leading slashes on url\r\nexport const REGEX_ANY_LEADING_SLASHES = /^\\/*/g;\r\n\r\n// match duplicate slashes on url\r\nexport const REGEX_DUPLICATE_SLASHES = /\\/{2,}/g;\r\n","import {\r\n  REGEX_ANY_TRAILING_SLASHES,\r\n  REGEX_ANY_LEADING_SLASHES,\r\n  REGEX_DUPLICATE_SLASHES,\r\n} from \"./constants\";\r\n\r\nconst buildUrlPath = (rootPath, childPath) => {\r\n  return `${rootPath}${childPath}`\r\n    .replace(REGEX_ANY_TRAILING_SLASHES, \"\")\r\n    .replace(REGEX_ANY_LEADING_SLASHES, \"/\")\r\n    .replace(REGEX_DUPLICATE_SLASHES, \"/\");\r\n};\r\n\r\nconst urls = {};\r\n\r\nurls.root = \"/\";\r\nurls.forbidden = \"/forbidden\";\r\nurls.chat = buildUrlPath(urls.root, \"/chat\");\r\nurls.logout = buildUrlPath(urls.root, \"/logout\");\r\n\r\nexport const clientUrls = urls;\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport styles from \"./Chat.module.css\";\r\nimport { ChatProvider } from \"../ChatContext/ChatContext\";\r\nimport SidePanel from \"../SidePanel/SidePanel\";\r\nimport ChatContainer from \"../ChatContainer/ChatContainer\";\r\nimport { clientUrls } from \"../../clientUrls\";\r\nimport { API_ENDPOINT } from \"../../environment\";\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [chatRoom, setChatRoom] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    });\r\n    socket = io(API_ENDPOINT);\r\n\r\n    setUserName(name);\r\n    setChatRoom(room);\r\n\r\n    socket.emit(\"join\", { name, room }, (error) => {\r\n      if (!!error) {\r\n        setHasError(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", ({ user, text }) => {\r\n      setMessages((messages) => [...messages, { user, text }]);\r\n    });\r\n\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n  }, []);\r\n\r\n  const sendMessage = useCallback((e, message) => {\r\n    e.preventDefault();\r\n\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(message));\r\n    }\r\n  }, []);\r\n\r\n  const chatContextValues = useMemo(\r\n    () => ({\r\n      users,\r\n      userName,\r\n      chatRoom,\r\n      message,\r\n      messages,\r\n      sendMessage,\r\n    }),\r\n    [users, userName, chatRoom, message, messages, sendMessage]\r\n  );\r\n\r\n  if (hasError) {\r\n    return <Redirect exact to={clientUrls.forbidden} />;\r\n  }\r\n\r\n  return (\r\n    <ChatProvider values={chatContextValues}>\r\n      <div className={styles.root}>\r\n        <SidePanel />\r\n        <ChatContainer />\r\n      </div>\r\n    </ChatProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","const messages = {\r\n  login_header: {\r\n    defaultMessage: \"Sign in to Chat-Pad\",\r\n  },\r\n  submit_button_label: {\r\n    defaultMessage: \"Proceed\",\r\n  },\r\n  username_error_message: {\r\n    defaultMessage: \"Username already in use\",\r\n  },\r\n};\r\n\r\nexport default messages;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./Login.module.css\";\r\nimport TextInput from \"../common/TextInput/TextInput\";\r\nimport Section from \"../common/Section/Section\";\r\nimport { clientUrls } from \"../../clientUrls\";\r\nimport messages from \"./messages\";\r\n\r\nconst Login = ({ location }) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [chatRoom, setChatRoom] = useState(\"\");\r\n\r\n  const { pathname } = location;\r\n\r\n  const formComponents = [\r\n    {\r\n      value: userName,\r\n      autoFocus: true,\r\n      placeholder: \"Enter user name\",\r\n      onChange: (e) => setUserName(e.target.value),\r\n    },\r\n    {\r\n      value: chatRoom,\r\n      placeholder: \"Enter the chat room name\",\r\n      onChange: (e) => setChatRoom(e.target.value),\r\n    },\r\n  ];\r\n\r\n  const renderForm = (formComponentOptions) => {\r\n    return formComponentOptions.map((element, i) => {\r\n      const { type, ...others } = element;\r\n      const FormField = type ? type : TextInput;\r\n      return <FormField key={i} {...others} />;\r\n    });\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setUserName(\"\");\r\n    setChatRoom(\"\");\r\n  };\r\n\r\n  const isValid = !!userName && !!chatRoom;\r\n\r\n  return (\r\n    <Section\r\n      header={messages.login_header.defaultMessage}\r\n      className={styles.root}\r\n      hasFormContent={true}\r\n    >\r\n      {renderForm(formComponents)}\r\n      <Link to={`${clientUrls.chat}?name=${userName}&room=${chatRoom}`}>\r\n        <button\r\n          onClick={clearForm}\r\n          disabled={!isValid}\r\n          className={\r\n            isValid\r\n              ? styles.submitButton\r\n              : cx(styles.submitButton, styles.submitButtonDisabled)\r\n          }\r\n          type=\"submit\"\r\n        >\r\n          <i className=\"far fa-arrow-alt-circle-right\"></i>\r\n        </button>\r\n      </Link>\r\n      {pathname === clientUrls.forbidden && (\r\n        <p className={styles.errorMessage}>\r\n          {messages.username_error_message.defaultMessage}\r\n        </p>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","const messages = {\r\n  logout_message: {\r\n    defaultMessage: \"You have successfully left the room.\",\r\n  },\r\n  login_again_message: {\r\n    defaultMessage: \"Login again\",\r\n  },\r\n};\r\n\r\nexport default messages;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Logout.module.css\";\r\nimport { clientUrls } from \"../../clientUrls\";\r\nimport messages from \"./messages\";\r\nimport Section from \"../common/Section/Section\";\r\n\r\nconst Logout = () => {\r\n  return (\r\n    <Section\r\n      header={messages.logout_message.defaultMessage}\r\n      className={styles.root}\r\n    >\r\n      <Link to={clientUrls.root}>\r\n        {messages.login_again_message.defaultMessage}\r\n      </Link>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React, { createContext } from \"react\";\r\n\r\nconst ChatContext = createContext(null);\r\n\r\nconst ChatProvider = ({ values, children }) => {\r\n  return <ChatContext.Provider value={values}>{children}</ChatContext.Provider>;\r\n};\r\n\r\nexport { ChatContext, ChatProvider };\r\n","const messages = {\r\n  panel_header: {\r\n    defaultMessage: \"Members\",\r\n  },\r\n};\r\n\r\nexport default messages;\r\n","import React, { useContext } from \"react\";\r\nimport { ChatContext } from \"../ChatContext/ChatContext\";\r\nimport styles from \"./SidePanel.module.css\";\r\nimport messages from \"./messages\";\r\nimport capitalize from \"lodash/capitalize\";\r\n\r\nconst SidePanel = () => {\r\n  const { users } = useContext(ChatContext);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.panelHeader}>\r\n        {messages.panel_header.defaultMessage}\r\n      </div>\r\n      <div>\r\n        {users.map(({ name }, i) => (\r\n          <div key={i} className={styles.panelListItem}>\r\n            <i className=\"fas fa-user-circle\"></i>\r\n            <p className={styles.userName}>{capitalize(name)}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n","const messages = {\r\n  input_placeholder: {\r\n    defaultMessage: \"Type something...\",\r\n  },\r\n  send_button_text: {\r\n    defaultMessage: \" Send\",\r\n  },\r\n};\r\n\r\nexport default messages;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { ChatContext } from \"../ChatContext/ChatContext\";\r\nimport styles from \"./ChatInputField.module.css\";\r\nimport messages from \"./messages\";\r\n\r\nconst ChatInputField = () => {\r\n  const { sendMessage } = useContext(ChatContext);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleSend = (e) => {\r\n    sendMessage(e, message);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <InputGroup className={styles.root}>\r\n      <FormControl\r\n        className={styles.textInput}\r\n        value={message}\r\n        placeholder={messages.input_placeholder.defaultMessage}\r\n        autoFocus\r\n        onChange={handleChange}\r\n        onKeyPress={(e) => (e.key === \"Enter\" ? handleSend(e) : null)}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          variant=\"light\"\r\n          onClick={(e) => handleSend(e)}\r\n          disabled={!message}\r\n        >\r\n          <i className=\"far fa-paper-plane\"></i>\r\n          {messages.send_button_text.defaultMessage}\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default ChatInputField;\r\n","import React from \"react\";\r\nimport styles from \"./MessageBubble.module.css\";\r\nimport cx from \"classnames\";\r\nimport capitalize from \"lodash/capitalize\";\r\n\r\nconst MessageBubble = ({ user, message, isFromNativeUser }) => {\r\n  const remoteBubbleStyle =\r\n    user !== \"chat master\"\r\n      ? cx(styles.root, styles.remoteUserMessageBubble)\r\n      : cx(styles.root, styles.remoteMessageBubble);\r\n\r\n  const bubbleStyle = isFromNativeUser\r\n    ? cx(styles.root, styles.userMessageBubble)\r\n    : cx(styles.root, remoteBubbleStyle);\r\n\r\n  const userNameOnBubble = isFromNativeUser ? \"You\" : capitalize(user);\r\n  return (\r\n    <div className={bubbleStyle}>\r\n      {user !== \"chat master\" && (\r\n        <p className={styles.userNameText}>{userNameOnBubble}</p>\r\n      )}\r\n      <p className={styles.messageText}>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageBubble;\r\n","const messages = {\r\n  sign_in_text: {\r\n    defaultMessage: \"Signed in as: \",\r\n  },\r\n  logout_text: {\r\n    defaultMessage: \"Sign Out\",\r\n  },\r\n};\r\n\r\nexport default messages;\r\n","import React, { useContext } from \"react\";\r\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { ChatContext } from \"../ChatContext/ChatContext\";\r\nimport { clientUrls } from \"../../clientUrls\";\r\nimport styles from \"./InfoBar.module.css\";\r\nimport messages from \"./messages\";\r\n\r\nconst InfoBar = () => {\r\n  const { userName, chatRoom } = useContext(ChatContext);\r\n  return (\r\n    <Navbar className={styles.root} bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand>{chatRoom}</Navbar.Brand>\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Nav>\r\n          <NavDropdown\r\n            title={`${messages.sign_in_text.defaultMessage}${userName}`}\r\n            id=\"collapsible-nav-dropdown\"\r\n          >\r\n            <NavDropdown.Item>Invite friends</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href={clientUrls.logout}>\r\n              {messages.logout_text.defaultMessage}\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default InfoBar;\r\n","import React, { useContext } from \"react\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport { ChatContext } from \"../ChatContext/ChatContext\";\r\nimport ChatInputField from \"../ChatInputField/ChatInputField\";\r\nimport MessageBubble from \"../MessageBubble/MessageBubble\";\r\nimport InfoBar from \"../InfoBar/InfoBar\";\r\nimport styles from \"./ChatContainer.module.css\";\r\n\r\nconst ChatContainer = () => {\r\n  const { userName, messages: chatMessages } = useContext(ChatContext);\r\n  return (\r\n    <div className={styles.root}>\r\n      <InfoBar />\r\n      <ScrollToBottom\r\n        className={styles.messages}\r\n        followButtonClassName={styles.followButton}\r\n        scrollViewClassName={styles.scrollView}\r\n      >\r\n        {chatMessages.map(({ user, text }, i) => {\r\n          const isFromNativeUser = user === userName;\r\n          return (\r\n            <MessageBubble\r\n              key={i}\r\n              user={user}\r\n              message={text}\r\n              isFromNativeUser={isFromNativeUser}\r\n            />\r\n          );\r\n        })}\r\n      </ScrollToBottom>\r\n      <ChatInputField />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n","export const DEV_API_ENDPOINT = \"localhost:5000\";\r\nexport const API_ENDPOINT = \"https://simple-messenger-app.herokuapp.com/\";\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport styles from \"./App.module.css\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Logout from \"./components/Logout/Logout\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport { clientUrls } from \"./clientUrls\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            path={[clientUrls.root, clientUrls.forbidden]}\r\n            exact\r\n            component={Login}\r\n          />\r\n          <Route path={clientUrls.chat} exact component={Chat} />\r\n          <Route path={clientUrls.logout} exact component={Logout} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__JDZyA\",\"submitButton\":\"Login_submitButton__OPa12\",\"submitButtonDisabled\":\"Login_submitButtonDisabled__2Aozr\",\"errorMessage\":\"Login_errorMessage__rDp07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SidePanel_root__1mnfR\",\"panelHeader\":\"SidePanel_panelHeader__l2jmZ\",\"panelListItem\":\"SidePanel_panelListItem__1InAS\",\"userName\":\"SidePanel_userName__3fiVN\",\"panelFooter\":\"SidePanel_panelFooter__2eiUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatContainer_root__2AqXN\",\"messages\":\"ChatContainer_messages__32qcf\",\"scrollView\":\"ChatContainer_scrollView__LPmrL\",\"followButton\":\"ChatContainer_followButton__3RHzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Section_root__28QKv\",\"form\":\"Section_form__1y6YA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatInputField_root__1LQLT\",\"textInput\":\"ChatInputField_textInput__3TvU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__29vpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextInput_root__5A0ki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Logout_root__kYhS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Chat_root__2dI5M\"};"],"sourceRoot":""}